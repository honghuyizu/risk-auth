<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans" xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
">

    <!-- 引入属性文件 -->
    <context:property-placeholder location="classpath:config.properties"/>


    <!--redis工具类-->
    <bean id="baseRedis" class="com.risk.common.redis.SysCache"></bean>


    <bean id="genericObjectPoolConfig" class="org.apache.commons.pool2.impl.GenericObjectPoolConfig">
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <!--最大空闲数 -->
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <!--最小空闲数-->
        <property name="minIdle" value="${redis.minIdle}"/>
        <!--当池内没有返回对象时，最大等待时间-->
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}"></property>
        <!--指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个-->
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
        <!--当从池中取出连接后，是否进行有效性检查-->
        <property name="testOnReturn" value="${redis.testOnReturn}"></property>
    </bean>
    <!---->
    <bean id="jedisCluster" class="redis.clients.jedis.JedisCluster">
        <constructor-arg index="0">
            <set>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg index="0" value="${redis.host}"/>
                    <constructor-arg index="1" value="${redis.port}"/>
                </bean>
                <!-- <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg index="0" value="${redis1.host}"/>
                    <constructor-arg index="1" value="${redis1.port}"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                     <constructor-arg index="0" value="${redis2.host}"/>
                     <constructor-arg index="1" value="${redis2.port}"/>
                 </bean>-->
            </set>
        </constructor-arg>
        <constructor-arg index="1" ref="genericObjectPoolConfig"/>
    </bean>
</beans>